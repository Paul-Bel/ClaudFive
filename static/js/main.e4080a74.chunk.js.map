{"version":3,"sources":["Components/inc/ClaudCounter.module.css","Components/button/Button.tsx","Components/settings/SetCloud.tsx","Components/inc/Ð¡ounter.tsx","Components/inc/ClaudCounter.tsx","Components/VariantOne/CounterSet.tsx","Components/VariantTwoo/CustomCounter.tsx","App.tsx","index.tsx","Components/settings/SetCloud.module.css","Components/Ferst.module.css"],"names":["module","exports","Button","name","props","className","disabled","s","buttonSet","onClick","onChange","setButton","changeSettings","SetCloud","counterValue","min","max","changeInc","e","setDispleys","preventDefault","namesValue","nameMax","nameMin","valueOnCklickButton","currentTarget","id","setOfButton","doubleValueOnCklickButton","item","displey","setCoumter","div","button_Value","onDoubleClick","redStyle","stylesInput","value","onKeyPress","type","step","button_Value_disabled","button","console","log","settings","buttonName","Counter","num","redFive","counter","divSet","ClaudCounter","disabledInc","disabledReset","disabledSet","buttonSetInc","buttonOne","buttonTwo","CounterSet","setCounterValue","CustomCounter","useState","setSettings","set","App","useEffect","values","localStorage","getItem","JSON","parse","setItem","stringify","copy","copys","but","to","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e4080a74.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ClaudCounter_item__2vEGf\",\"displey\":\"ClaudCounter_displey__3tp1O\",\"button\":\"ClaudCounter_button__13MKi\"};","import React, {useState} from 'react';\r\nimport s from '../Ferst.module.css'\r\n\r\ntype ButtonPropsType = {\r\n    buttonSetInc?: () => void,\r\n    setButton?: () => void\r\n    name: string\r\n    changeSettings?: (set: boolean) => void\r\n    disabled?: boolean\r\n    onChange?: (name: string) => void\r\n\r\n}\r\n\r\nexport function Button({name, ...props}: ButtonPropsType) {\r\n    const buttonHandler = () => {\r\n        if(props.onChange)props.onChange(name)\r\n        if(props.setButton){props.setButton()}\r\n        if(props.changeSettings){props.changeSettings(false)}\r\n    }\r\n    return (\r\n        <button\r\n            className={props.disabled ? s.disabled : s.buttonSet}\r\n            disabled={props.disabled}\r\n            onClick={buttonHandler}\r\n        >\r\n            {name}\r\n\r\n        </button>\r\n    );\r\n}\r\n\r\n\r\n","import React, {ChangeEvent, MouseEvent} from \"react\";\r\nimport s from './SetCloud.module.css'\r\nimport {Button} from \"../button/Button\";\r\n\r\ntype CV = {\r\n    min: number, max: number, num: number\r\n}\r\ntype InputNumberType = {\r\n    counterValue: { min: number, max: number, num: number }\r\n    buttonName: { buttonOne: string, buttonTwo: string, button: string }\r\n    namesValue: { nameMax: string, nameMin: string }\r\n    setOfButton: (value: number, name: string) => void\r\n    setDispleys: (display: boolean) => void\r\n    setCounterValue: (value: CV) => void\r\n    displey: boolean\r\n    settings?: boolean\r\n    changeSettings?: (set: boolean) => void\r\n}\r\nexport const SetCloud = ({counterValue, ...props}: InputNumberType) => {\r\n    let {min, max} = counterValue\r\n    const changeInc = (e: MouseEvent<HTMLInputElement>) => {\r\n        props.setDispleys(false)\r\n        e.preventDefault()\r\n    }\r\n    const setButton = () => {\r\n        console.log(props.settings + ' ttttttttttt')\r\n        props.setDispleys(true)\r\n        props.setOfButton(min, props.buttonName.button)\r\n        if (props.changeSettings) {\r\n            props.changeSettings(!props.settings)\r\n        }\r\n    }\r\n    let {nameMax, nameMin} = props.namesValue\r\n\r\n    const valueOnCklickButton = (e: MouseEvent<HTMLButtonElement>) => {\r\n        if (e.currentTarget.id == nameMax) {\r\n            props.setOfButton(max + 1, nameMax)\r\n        }\r\n        if (e.currentTarget.id == '-') {\r\n            props.setOfButton(max - 1, nameMax)\r\n        }\r\n\r\n        if (e.currentTarget.id == nameMin) {\r\n            props.setOfButton(min + 1, nameMin)\r\n        }\r\n        if (e.currentTarget.id == '--') {\r\n            props.setOfButton(min - 1, nameMin)\r\n        }\r\n        props.setDispleys(false)\r\n    }\r\n        const doubleValueOnCklickButton = (e: MouseEvent<HTMLButtonElement>) => {\r\n        if (e.currentTarget.id == nameMax) {\r\n            props.setOfButton(max + 10, nameMax)\r\n        }\r\n        if (e.currentTarget.id == '-' && max>=min-10) {\r\n            props.setOfButton(max - 10, nameMax)\r\n        }\r\n\r\n        if (e.currentTarget.id == nameMin && min+10 <= max) {\r\n            props.setOfButton(min + 10, nameMin)\r\n        }\r\n        if (e.currentTarget.id == '--' && min-10 >=-1) {\r\n            props.setOfButton(min - 10, nameMin)\r\n        }\r\n            props.setDispleys(false)\r\n    }\r\n\r\n\r\n    const disabled = min === max || (min === -1)\r\n\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <div className={s.displey}>\r\n                <div className={s.setCoumter}>\r\n                    <div className={s.div}>\r\n                        {nameMax}\r\n                    </div>\r\n                    <div>\r\n                        <button\r\n                            className={s.button_Value}\r\n                            id={nameMax}\r\n                            onClick={valueOnCklickButton}\r\n                            onDoubleClick={doubleValueOnCklickButton}\r\n                        >\r\n                            +\r\n                        </button>\r\n                        <input\r\n                            className={min === max ? s.redStyle : s.stylesInput}\r\n                            min={min}\r\n                            id={nameMax}\r\n                            value={max}\r\n                            onKeyPress={(e)=>{e.preventDefault()}}\r\n                            type=\"number\"\r\n                            onClick={changeInc}\r\n                            step=\"1\"\r\n                            disabled={true}\r\n                        />\r\n                        <button\r\n                            className={min===max ? s.button_Value_disabled : s.button_Value}\r\n                            id={'-'}\r\n                            onClick={valueOnCklickButton}\r\n                            onDoubleClick={doubleValueOnCklickButton}\r\n                            disabled={max===min}\r\n                        >\r\n                            -\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className={s.setCoumter}>\r\n                    <div className={s.div}>\r\n                        {nameMin}\r\n                    </div>\r\n                    <div>\r\n                        <button\r\n                            className={min===max ? s.button_Value_disabled : s.button_Value}\r\n                            id={nameMin}\r\n                            onClick={valueOnCklickButton}\r\n                            onDoubleClick={doubleValueOnCklickButton}\r\n                            disabled={max===min}\r\n                        >\r\n                            +\r\n                        </button>\r\n                        <input\r\n                            className={min === max ? s.redStyle : min === -1 ? s.redStyle : s.stylesInput}\r\n                            id={nameMin}\r\n                            value={min}\r\n                            onKeyPress={(e) => {\r\n                                e.preventDefault()}}\r\n                            type=\"number\"\r\n                            min={-1}\r\n                            max={max}\r\n                            onClick={changeInc}\r\n                            disabled={true}\r\n                        />\r\n                        <button\r\n                            className={min===-1 ? s.button_Value_disabled : s.button_Value}\r\n                            id={'--'}\r\n                            onClick={valueOnCklickButton}\r\n                            onDoubleClick={doubleValueOnCklickButton}\r\n                            disabled={min===-1}\r\n                        >\r\n                            -\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={s.button}>\r\n                <Button\r\n                    disabled={disabled}\r\n                    setButton={setButton}\r\n                    name={props.buttonName.button}\r\n\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from '../Ferst.module.css'\r\n\r\ntype ButtonPropsType = {\r\n    min: number,\r\n    max: number,\r\n    num: number\r\n    displey: boolean,\r\n}\r\n\r\nexport function Counter({min, max, ...props}: ButtonPropsType) {\r\n\r\n    const SetDispley = () => {\r\n        return (\r\n            <div\r\n                className={s.divSet}>\r\n                enter value\r\n            </div>\r\n        )\r\n    }\r\n    const ErrorDispl = () => {\r\n        return(\r\n            <div\r\n                className={s.divSet}>\r\n                Error\r\n                enter correct value\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div\r\n            // style={div}\r\n            className={props.num === max ? s.redFive : s.counter}>\r\n            {props.displey ? props.num : (min === max || min === -1 || min > max) ? ErrorDispl() : SetDispley()}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import s from './ClaudCounter.module.css'\r\nimport {Button} from \"../button/Button\";\r\nimport {Counter} from \"./Ð¡ounter\";\r\nimport React from \"react\";\r\n\r\ntype buttonProps = {\r\n    counterValue: { min: number, max: number, num: number }\r\n    buttonSetInc: (e: string) => void,\r\n    buttonName: { buttonOne: string, buttonTwo: string, button: string }\r\n    displey: boolean\r\n    setDispleys: (display: boolean) => void\r\n    settings?: boolean\r\n    changeSettings?: (set: boolean) => void\r\n}\r\n\r\nexport function ClaudCounter({buttonName, counterValue, ...props}: buttonProps) {\r\n\r\n    const disabledInc = counterValue.num === counterValue.max || (counterValue.min === -1)\r\n    const disabledReset = counterValue.num === counterValue.min || (counterValue.min === -1)\r\n    const disabledSet = !props.displey\r\n        || (counterValue.min === -1)\r\n\r\n\r\n\r\n    const onChange = (name: string) => {\r\n         props.buttonSetInc(name)\r\n        if(name === buttonName.button){\r\n        if(props.changeSettings) {props.changeSettings(false)}}\r\n    }\r\n    return (\r\n        <div className={s.item}>\r\n            <div className={s.displey}>\r\n                <Counter min={counterValue.min} max={counterValue.max} num={counterValue.num} displey={props.displey}/>\r\n            </div>\r\n            <div className={s.button}>\r\n                <Button\r\n                    buttonSetInc={() => props.buttonSetInc(buttonName.buttonOne)}\r\n                    name={buttonName.buttonOne}\r\n                    disabled={disabledInc}\r\n                    onChange={onChange}\r\n                />\r\n                <Button\r\n                    buttonSetInc={() => props.buttonSetInc(buttonName.buttonTwo)}\r\n                    name={buttonName.buttonTwo}\r\n                    disabled={disabledReset}\r\n                    onChange={onChange}\r\n                />\r\n\r\n                {props.settings &&\r\n                <Button\r\n                    changeSettings={props.changeSettings}\r\n                    name={buttonName.button}\r\n                    disabled={disabledSet}\r\n                    onChange={onChange}\r\n                />}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport {SetCloud} from \"../settings/SetCloud\";\r\nimport './../../App.css';\r\nimport {ClaudCounter} from \"../inc/ClaudCounter\";\r\n\r\ntype CV = {\r\n    min: number, max: number, num: number\r\n}\r\ntype CoutnerSetType = {\r\n    counterValue: { min: number, max: number, num: number }\r\n    buttonName: { buttonOne: string, buttonTwo: string, button: string}\r\n    namesValue: { nameMax: string, nameMin: string }\r\n    setOfButton: (value: number, name: string) => void\r\n    setDispleys: (display: boolean) => void\r\n    setCounterValue: (value: CV) => void\r\n    displey: boolean\r\n    buttonSetInc: (e: string) => void,\r\n}\r\n\r\nexport const CounterSet = (props: CoutnerSetType) => {\r\n    return (\r\n        <div className={'conteiner'}>\r\n            <div>\r\n                <SetCloud\r\n                    counterValue={props.counterValue}\r\n                    buttonName={props.buttonName}\r\n                    namesValue={props.namesValue}\r\n                    setOfButton={props.setOfButton}\r\n                    setCounterValue={props.setCounterValue}\r\n                    setDispleys={props.setDispleys}\r\n                    displey={props.displey}\r\n                />\r\n            </div>\r\n            <div>\r\n                <ClaudCounter\r\n                    counterValue={props.counterValue}\r\n                    buttonSetInc={props.buttonSetInc}\r\n                    buttonName={props.buttonName}\r\n                    displey={props.displey}\r\n                    setDispleys={props.setDispleys}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport './../../App.css';\r\nimport {SetCloud} from \"../settings/SetCloud\";\r\nimport {ClaudCounter} from \"../inc/ClaudCounter\";\r\n\r\ntype CV = {\r\n    min: number, max: number, num: number\r\n}\r\ntype CoutnerSetType = {\r\n    counterValue: { min: number, max: number, num: number }\r\n    buttonName: { buttonOne: string, buttonTwo: string, button: string }\r\n    namesValue: { nameMax: string, nameMin: string }\r\n    setOfButton: (value: number, name: string) => void\r\n    setDispleys: (display: boolean) => void\r\n    setCounterValue: (value: CV) => void\r\n    displey: boolean\r\n    buttonSetInc: (e: string) => void,\r\n}\r\nexport const CustomCounter = (props: CoutnerSetType) => {\r\n    const [settings, setSettings] = useState(true)\r\n    console.log(settings + '  sett')\r\n    const changeSettings = (set: boolean) => {\r\n        setSettings(set)\r\n    }\r\n    return (\r\n        <div className={'conteiner'}>\r\n\r\n            {!settings ?\r\n                <SetCloud\r\n                    counterValue={props.counterValue}\r\n                    buttonName={props.buttonName}\r\n                    namesValue={props.namesValue}\r\n                    setOfButton={props.setOfButton}\r\n                    setCounterValue={props.setCounterValue}\r\n                    setDispleys={props.setDispleys}\r\n                    displey={props.displey}\r\n                    settings={settings}\r\n                    changeSettings={changeSettings}\r\n                />\r\n                :\r\n                <ClaudCounter\r\n                    settings={settings}\r\n                    counterValue={props.counterValue}\r\n                    buttonSetInc={props.buttonSetInc}\r\n                    buttonName={props.buttonName}\r\n                    displey={props.displey}\r\n                    changeSettings={changeSettings}\r\n                    setDispleys={props.setDispleys}\r\n                />}\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport './App.css';\r\nimport {CounterSet} from \"./Components/VariantOne/CounterSet\";\r\nimport {BrowserRouter, NavLink, Route, Routes} from \"react-router-dom\";\r\nimport {CustomCounter} from \"./Components/VariantTwoo/CustomCounter\";\r\n\r\nfunction App() {\r\n    let buttonName = {buttonOne: \"INC\", buttonTwo: \"RESET\", button: \"SET\"}\r\n    let {buttonOne, buttonTwo} = buttonName\r\n    let namesValue = {nameMax: \"Max Value\", nameMin: \"Min Value\"}\r\n    const [displey, setDispleys] = useState(true)\r\n    console.log(displey + ' app')\r\n    console.log(displey + ' znach')\r\n    const [counterValue, setCounterValue] = useState({min: 0, max: 10, num: 0})\r\n    useEffect(() => {\r\n        let values = (localStorage.getItem('values'))\r\n        if (values) {\r\n            let num = JSON.parse(values)\r\n            num.num = JSON.parse(values).min\r\n            setCounterValue(num)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('values', JSON.stringify(counterValue))\r\n    }, [counterValue])\r\n\r\n    const setOfButton = (value: number, name: string) => {\r\n        let copy = {...counterValue}\r\n        if (name == namesValue.nameMax) {\r\n            setCounterValue({...copy, max: value})\r\n        }\r\n        if (name == namesValue.nameMin) {\r\n            let copys = {...counterValue, min: value}\r\n            setCounterValue({...copys})\r\n        }\r\n        if (name == buttonName.button) {\r\n            let copys = {...counterValue, num: value}\r\n            setCounterValue({...copys})\r\n        }\r\n    }\r\n\r\n    const buttonSetInc = (but: string) => {\r\n        let copy = {...counterValue}\r\n        if (but === buttonOne && counterValue.num < counterValue.max) {\r\n            setCounterValue({...copy, num: (counterValue.num + 1)})\r\n        }\r\n        if (but === buttonTwo) {\r\n            setCounterValue({...copy, num: counterValue.min})\r\n        }\r\n    }\r\n    return (\r\n        <BrowserRouter>\r\n            <div className={'App'}>\r\n                <div className={\"block\"}>\r\n                    <NavLink to={\"/ClaudFive/\"}>\r\n                        <button className={'select'}>First_option</button>\r\n                    </NavLink>\r\n                    <NavLink to={\"/SecondVar/\"}>\r\n                        <button className={'select'}>Second_option</button>\r\n                    </NavLink>\r\n                </div>\r\n                <Routes>\r\n                    <Route path='/ClaudFive'\r\n                           element={<CounterSet\r\n                               counterValue={counterValue}\r\n                               buttonName={buttonName}\r\n                               namesValue={namesValue}\r\n                               setOfButton={setOfButton}\r\n                               setCounterValue={setCounterValue}\r\n                               setDispleys={setDispleys}\r\n                               displey={displey}\r\n                               buttonSetInc={buttonSetInc}\r\n                           />}/>\r\n                    <Route path='/SecondVar'\r\n                           element={\r\n                               <CustomCounter\r\n                                   counterValue={counterValue}\r\n                                   buttonName={buttonName}\r\n                                   namesValue={namesValue}\r\n                                   setOfButton={setOfButton}\r\n                                   setCounterValue={setCounterValue}\r\n                                   setDispleys={setDispleys}\r\n                                   displey={displey}\r\n                                   buttonSetInc={buttonSetInc}\r\n                               />}/>\r\n                </Routes>\r\n            </div>\r\n\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"SetCloud_item__Xo9gz\",\"div\":\"SetCloud_div__10FXc\",\"displey\":\"SetCloud_displey__31L1i\",\"button\":\"SetCloud_button__WX6iT\",\"setCoumter\":\"SetCloud_setCoumter__26mm-\",\"redStyle\":\"SetCloud_redStyle__3fEwZ\",\"stylesInput\":\"SetCloud_stylesInput__1Vy6o\",\"button_Value\":\"SetCloud_button_Value__1LPDv\",\"button_Value_disabled\":\"SetCloud_button_Value_disabled__3ypfZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonSet\":\"Ferst_buttonSet__2iAw-\",\"disabled\":\"Ferst_disabled__1SUKq\",\"redFive\":\"Ferst_redFive__2b403\",\"div\":\"Ferst_div__sKDBO\",\"divSet\":\"Ferst_divSet__19U-Y\",\"counter\":\"Ferst_counter__2BsHd\"};"],"sourceRoot":""}